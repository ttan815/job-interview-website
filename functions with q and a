def question_1():
    return "Which of the following is/ are the part of operating system?"

def answers_1():
    return "A) Kernel services\nB) Library services\nC) Application level services\nD) All of the above"

def question_2():
    return "The system of ............... generally ran one job at a time. These were called single stream batch processing."

def answers_2():
    return "A) 40's\nB) 50's\nC) 60's\nD) 70's"

def question_3():
    return "In ............. generation of operating system, operating system designers develop the concept of multiprogramming in which several jobs are in main memory at once."

def answers_3():
    return "A) First\nB) Second\nC) Third\nD) Fourth"

def question_4():
    return "State True or False. i) In spooling high speed devices like a disk is interposed between running program and a low-speed device in input/output. ii) By using spooling for example instead of writing directly to a printer, outputs are written to the disk. "

def answers_4():
    return "A) i-True, ii-False B) i-True, ii-True C) i-False, ii-True D) i-False, ii-False" 
    
def question_5(): 
  return "Which of the following is/are the functions of operating system? i) Sharing hardware among users. ii) Allowing users to share data among themselves. iii) Recovering from errors. iv) Preventing users from interfering with one another. v) Scheduling resources among users."

def answers_5(): 
  return "A) i, ii, iii and iv only B) ii, iii, iv and v only C) i, iii, iv and v only D) All i, ii, iii, iv and v"

def question_6():
  return ".................. executes must frequently and makes the fine grained decision of which process to execute the next."

def anwers_6():
  return "A) Long-term scheduling B) Medium-term scheduling C) Short-term scheduling D) None of the above"

def question_7():
    return "With ................ a page is brought into main memory only when the reference is made to a location on that page."

def answers_7():
    return "A) demand paging B) main paging C) prepaging D) postpaging"

def question_8():
    return "....................... provides a larger sized of virtual memory but require virtual memory which provides multidimensional memory."

def answers_8():
    return "A) Paging method B) Segmentation method C) Paging and segmentation method D) None of these"

def question_9():
    return "............... is a large kernel containing virtually the complete operating system, including, scheduling, file system, device drivers and memory management."

def answers_9():
    return "A) Multilithic kernel B) Monolithic kernel C) Micro kernel D) Macro kernel"

def question_10():
    return "............... is a large operating system core provides a wide range of services."

def answers_10():
    return "A) Multilithic kernel B) Monolithic kernel C) Micro kernel D) Macro kernel"

def question_11():
    return "Which of the following is not the function of Microkernel?"

def answers_11():
    return "A) File management B) Low-level memory management C) Inter-process communication D) I/O interrupts management" 

def question_12():
    return "Match the following. i) Mutual exclusion a) A process may hold allocated resources while waiting assignment. ii) Hold and wait b) No resource can be forcibly removed from a process holding it. iii) No preemption c) Only one process may use a resource at a time."

def answers_12():
    return "A) i-a, ii-b, iii-c B) i-a, ii-c, iii-b C) i-b, ii-c, iii-a D) i-c, ii-a, iii-b"

def question_13():
    return "A direct method of deadlock prevention is to prevent the occurrences of ..................."
    
def answers_13():
    return "A) Mutual exclusion B) Hold and wait C) Circular waits D) No preemption"

def question_14():
    return "The methods or algorithms which are used to increase the performance of disk storage sub-systemis called ............."
    
def answers_14():
    return "A) Disk performing B) Disk scheduling C) Disk storing D) Disk extending"

def question_15():
    return "................. is the time required to move the disk arm to the required track."
    
def answers_15():
    return "A) Seek time B) Rotational delay C) Latency time D) Access time"

def question_16():
    return "The ............... policy restricts scanning to one direction only."
    
def answers_16():
    return "A) SCAN B) C-SCAN C) N-Step SCAN D) Both A and B"

def question_17():
    return "............... policy selects the disk I/O request that requires the least movement of the disk arm from its current position."
    
def answers_17():
    return "A) FSCAN B) SSTF C) SCAN D) C-SCAN"

def question_18():
    return ".................. refers to the ability of an operating system to support multiple threads of execution with a single process."
    
def answers_18():
    return "A) Multithreading B) Multiprocessing C) Multiexecuting D) Bi-threading"
    

my_selected_question = None

if selected_question == 1:
    print(question_1())
    print(answers_1())
elif selected_question == 2:
    print(question_2())
    print(answers_2())
elif selected_question == 3:
    print(question_3())
    print(answers_3())
elif selected_question == 4:
    print(question_4())
    print(answers_4())
elif selected_question == 5:
    print(question_5())
    print(answers_5())
elif selected_question == 6:
    print(question_6())
    print(answers_6())
elif selected_question == 7:
    print(question_7())
    print(answers_7())
elif selected_question == 8:
    print(question_8())
    print(answers_8())
elif selected_question == 9:
    print(question_9())
    print(answers_9())
elif selected_question == 10:
    print(question_10())
    print(answers_10())
elif selected_question == 11:
    print(question_11())
    print(answers_11())
elif selected_question == 12:
    print(question_12())
    print(answers_12())
elif selected_question == 13:
    print(question_13())
    print(answers_13())
elif selected_question == 14:
    print(question_14())
    print(answers_14())
elif selected_question == 15:
    print(question_15())
    print(answers_15())
elif selected_question == 16:
    print(question_16())
    print(answers_16())
elif selected_question == 17:
    print(question_17())
    print(answers_17())
elif selected_question == 18:
    print(question_18())
    print(answers_18())


